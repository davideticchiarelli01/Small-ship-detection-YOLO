# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# YOLO12 object detection model with P3/8 - P5/32 outputs
# Model docs: https://docs.ultralytics.com/models/yolo12
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 1 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo12n.yaml' will call yolo12.yaml with scale 'n'
  # [depth, width, max_channels]
  #s: [0.33, 0.50, 1024] # summary: 272 layers, 9,284,096 parameters, 9,284,080 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 292 layers, 20,199,168 parameters, 20,199,152 gradients, 68.1 GFLOPs

# YOLO12n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2 
  - [-1, 1, SPDConv, [128, 2]] # 1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]]
  - [-1, 1, SPDConv, [256, 2]] # 3-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]]
  - [-1, 1, SPDConv, [512, 2]] # 5-P4/16
  - [-1, 4, A2C2f, [512, True, 4]]
  - [-1, 1, SPDConv, [1024, 2]] # 7-P5/32
  - [-1, 4, A2C2f, [1024, True, 1]] # 8

# YOLO12n head
head:
  # --------- TOP-DOWN ---------
  # Upsample P5 to P4 size, concat with P4, fuse -> P4'
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]         # 9: upsample P5 (8) to P4
  - [[6, -1], 1, Concat, [1]]                          # 10: concat P4 (6) + up(P5)
  - [-1, 1, A2C2f, [512, False, 1]]                    # 11: P4'

  # Upsample P4' to P3 size, concat with P3, fuse -> P3'
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]         # 12: upsample P4' to P3
  - [[4, -1], 1, Concat, [1]]                          # 13: concat P3 (4) + up(P4')
  - [-1, 1, A2C2f, [256, False, 1]]                    # 14: P3'

  # Upsample P3' to P2 size, concat with P2, fuse -> P2'
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]         # 15: upsample P3' to P2
  - [[2, -1], 1, Concat, [1]]                          # 16: concat P2 (2) + up(P3')
  - [-1, 1, A2C2f, [128, False, 1]]                    # 17: P2'

  # --------- BOTTOM-UP (SPANet) ---------
  - [-1, 1, SPDConv, [256, 2]]                         # 18: downsample P2' to P3'
  - [[4, 14, -1], 1, Concat, [1]]                      # 19: concat P3 (4), P3' (14), P2'(down)
  - [-1, 1, C3k2, [256, False, 1]]                    # 20: fusione finale

  # --------- DETECTION ---------
  - [[20], 1, Detect, [nc]]                         # detection finale

training:
  task: detect
  epochs: 100
  batch: 64
  optimizer: SGD
  lr0: 0.01
  lrf: 0.0001
  momentum: 0.9
  weight_decay: 0.0005
  warmup_epochs: 3
  pretrained: False
  save_period: 10
  cache: False
  save: True
  verbose: True
  save_dir: "/app/results"
  device: 0, 1
  project: "/app/results"
