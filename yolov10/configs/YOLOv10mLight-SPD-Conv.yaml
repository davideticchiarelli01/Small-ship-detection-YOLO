# Ultralytics YOLO ðŸš€, AGPL-3.0 license

# Parameters
nc: 1 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  m: [0.67, 0.75, 768] # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]         # 0 - P1/2 (first downsample)
  - [-1, 1, SPDConv, [128, 2]]        # 1 - P2/4 (second downsample)
  - [-1, 3, C2f, [128, True]]         # 2 - feature aggregation 1
  - [-1, 1, SPDConv, [256, 2]]        # 3 - downsample to 1/8
  - [-1, 6, C2f, [256, True]]         # 4 - **P3/8** (feature map at 1/8, dopo fusione)
  - [-1, 1, SPDConv, [512, 2]]        # 5 - downsample to 1/16
  - [-1, 6, C2f, [512, True]]         # 6 - **P4/16** (feature map at 1/16, dopo fusione)
  - [-1, 1, SPDConv, [1024, 2]]       # 7 - downsample to 1/32
  - [-1, 3, C2fCIB, [1024, True]]     # 8 - feature aggregation 2
  - [-1, 1, SPPF, [1024, 5]]          # 9 - neck bottleneck (SPPF)
  - [-1, 1, PSA, [1024]]              # 10 - (opzionale) attention

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]   # 11
  - [[-1, 6], 1, Concat, [1]]                    # 12 
  - [-1, 3, C2f, [512]]                          # 13

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]   # 14
  - [[-1, 4], 1, Concat, [1]]                    # 15 
  - [-1, 3, C2f, [256]]                          # 16 
  
  - [[16], 1, v10Detect, [nc]]                   # 17

training:
  task: detect
  epochs: 100
  batch: 64
  optimizer: SGD
  lr0: 0.01
  lrf: 0.0001
  momentum: 0.9
  weight_decay: 0.0005
  warmup_epochs: 3
  pretrained: False
  save_period: 10
  cache: False
  save: True
  verbose: True
  save_dir: "/app/results"
  device: 0
  project: "/app/results"